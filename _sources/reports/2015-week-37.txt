========================================
Engineering Report <dv> - Week 37, 2015
========================================

Highlights
========================================

* Binary to LLVM IR 相關 Project
    - `[2013][LLVM] Dagger - Decompiling to IR <http://llvm.org/devmtg/2013-04/bougacha-slides.pdf>`_
        + `Dagger <http://dagger.repzret.org/>`_
    - McSema
        + `[GitHub] trailofbits/mcsema <https://github.com/trailofbits/mcsema>`_
        + `McSema: Static Translation of x86 Instruction Semantics to LLVM <http://blog.trailofbits.com/2014/08/07/mcsema-is-officially-open-source/>`_
    - Fracture
        + `[GitHub] draperlaboratory/fracture - an architecture-independent decompiler to LLVM IR <https://github.com/draperlaboratory/fracture>`_
    - `Capstone - lightweight multi-platform, multi-architecture disassembly framework <http://www.capstone-engine.org/>`_

* Sanitizer 相關 Slide
    - `[2012] Serebryany-ASAN-TSAN-Poster <http://llvm.org/devmtg/2012-11/Serebryany-ASAN-TSAN-Poster.pdf>`_
    - `[2012] ThreadSanitizer, MemorySanitizer <http://llvm.org/devmtg/2012-11/Serebryany_TSan-MSan.pdf>`_
    - `[2013] MemorySanitizer <http://llvm.org/devmtg/2013-04/stepanov-slides.pdf>`_
    - `[2013] New features in AddressSanitizer <http://llvm.org/devmtg/2013-11/slides/Serebryany-ASAN.pdf>`_
    - `[2014] AddressSanitizer + Code Coverage <http://llvm.org/devmtg/2014-04/PDFs/LightningTalks/EuroLLVM'14%20--%20ASan%20%2B%20Coverage.pdf>`_
    - `[2014] AddressSanitizer for Windows <http://llvm.org/devmtg/2014-10/Slides/ASan%20for%20Windows.pdf>`_
* Sanitizer 相關文章
    - `Using clang's Address Sanitizer (without clang) <http://btorpey.github.io/blog/2014/03/27/using-clangs-address-sanitizer/>`_


Plan
========================================

Issues
========================================
